#thanos and iron man had a challenge
n = int(input())
even = []
odd = []
for i in range(n):
    num = int(input())
    if num % 2 == 0:
        even.append(num)
    else:
        odd.append(num)
print(*even, end=' ')
print()
print(*odd, end=' ')
print()















#2520 is the smallest number that can be divided by each of the numbers
def smallest_multiple(n):
    primes = []
    for i in range(2, n+1):
        is_prime = True
        for j in range(2, int(i**0.5)+1):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(i)
    result = 1
    for prime in primes:
        power = 1
        while prime**power <= n:
            power += 1
        result *= prime**(power-1)
    return result
n = int(input())
print(smallest_multiple(n))















#In our institution celebrates the independence day
n = int(input())
letters = [input() for _ in range(n)]
for i in range(n):
    row = [] 
    for j in range(i+1):
        row.append(letters[j] + ' ') 
    for k in range(n-i-1):
        row.append('') 
    print(''.join(row))
















#Marvel Studios is known for the production of the Marvel Cinematic
n = int(input())
names = []
for i in range(n):
    names.append(input())
names.sort()
for name in names:
    print(name)















#Pentagonal numbers are generated by the formula, Pn=n(3nâˆ’1)/2
n = int(input())
for i in range(1, n):
    Pn = int( (i * (3 * i - 1)) / 2)
    print(Pn)















#In the battle of Kurukshetra
n = int(input()) # get input from user
for i in range(n, 0, -1):
    for j in range(i):
        print("*", end="")
    print() 
n = int(input()) 
for i in range(n):
    for j in range(i+1):
        print("* ", end="")
    print()


















#Akash the die heart fan of AR Rahman
num_rows = int(input())
for i in range(num_rows):
    num_seats = num_rows - i
    row_layout = [num_seats] * num_seats
    print(*row_layout, end=" ")
    print()






#n! means
n=int(input())
s=1
sol=0
for i in range(1,n+1):
 s=s*i
for j in str(s):
 sol+=int(j)
print(sol)








#ganapathy
n = int(input())
for i in range(1,n+1):
 for j in range(1,i+1):
 if(i%2==0):
 print("Fail ",end="")
 else:
 print("Pass ",end="")
 print("")








#Euler asked the question to Ramanujan that, from the natural numbers 
def sum_of_multiples(N):
    total = 0
    for i in range(N):
        if i % 3 == 0 or i % 5 == 0:
            total += i
    return total
N = int(input())
print(sum_of_multiples(N))















lvl 2
#palindrome

def is_palindrome(number):
    return str(number) == str(number)[::-1]

def find_largest_palindrome(n):
    largest_palindrome = 0
    for i in range(100, n):
        for j in range(100, n):
            product = i * j
            if is_palindrome(product) and product > largest_palindrome:
                largest_palindrome = product
    return largest_palindrome

# Read input from STDIN
n = int(input())

# Find the largest palindrome made from the product of two 3-digit numbers
result = find_largest_palindrome(n)

# Print the result to STDOUT
print(result)
#str(p) == str(p)[::-1]















#the sum of square of

def sum_of_squares_difference(n):
    # Initialize variables to store sum of squares and square of sum
    sum_of_squares = 0
    sum_val = 0

    # Calculate sum of squares and sum of natural numbers
    for i in range(1, n+1):
        sum_of_squares += i**2
        sum_val += i

    # Square the sum of natural numbers
    square_of_sum = sum_val**2

    # Calculate the difference
    difference = square_of_sum - sum_of_squares

    return difference

# Input the value of n
n = int(input())

# Calculate and print the difference
print(sum_of_squares_difference(n))  #append










LVL 3

#THE DEPARTMENT OF POLICE IN YOUR  CITY
#arr=arr.split(" ")
#arr=input()
#available=0
# Input the number of events
n = int(input())

# Input the sequence of events as a list
arr = list(map(int, input().split()))

# Initialize available officers
available = 0

# Initialize count of untreated crimes
untreated_crimes = 0

# Iterate through the events
for event in arr:
    # If officers are recruited, add them to available officers
    if event != -1:
        available += event
    # If a crime occurs and there are no available officers, increment untreated crimes
    elif available == 0:
        untreated_crimes += 1
    # If there are available officers, assign one to investigate the crime
    else:
        available -= 1

# Output the number of untreated crimes
print(untreated_crimes


















